% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusterbreak.R
\name{netcluster}
\alias{netcluster}
\title{Generate cluster ID using graph network and Louvain method}
\usage{
netcluster(
  pepmat,
  igraph_mode = "upper",
  igraph_weight = TRUE,
  cluster_func = function(x, ...) igraph::cluster_louvain(x, resolution = 1.05,
    ...)$membership,
  cluster_weight = TRUE
)
}
\arguments{
\item{pepmat}{A square or upper triangular adjacency matrix.}

\item{igraph_mode}{Mode settings for igraph (default: "upper").}

\item{igraph_weight}{Weight setting (TRUE/NULL) for igraph (default: TRUE).}

\item{cluster_func}{Function to perform network-based clustering compatible with igraph networks.}

\item{cluster_weight}{Logical value indicating whether to use network edge weights in the clustering function.}
}
\value{
A numeric vector containing cluster assignments.
}
\description{
Generate cluster ID using graph network and Louvain method
}
\examples{
# Load necessary libraries
library(DynaAlign)
library(igraph)

# Create a mock adjacency matrix (similarity matrix)
# This example creates a simple network with two distinct clusters
adjacency_matrix <- matrix(c(
  1, 1, 0, 0,
  1, 1, 0, 0,
  0, 0, 1, 1,
  0, 0, 1, 1
), nrow = 4, byrow = TRUE)

# Perform clustering using the default Louvain method
default_clusters <- netcluster(pepmat = adjacency_matrix)
print(default_clusters)

# Define a mock Louvain clustering function (replace with actual implementation)
mock_louvain_mod <- function(gin, res, ...) {
  # For demonstration, assign first two nodes to cluster 1 and the rest to cluster 2
  return(c(1, 1, 2, 2))
}

# Perform clustering using the custom mock Louvain method without using edge weights
custom_clusters <- netcluster(
  pepmat = adjacency_matrix,
  cluster_weight = FALSE,
  cluster_func = function(x, ...) mock_louvain_mod(gin = x, res = 1.05, ...)
)
}
